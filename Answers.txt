### Temel Türler & Null Güvenliği 
`val` ile `var` arasındaki fark nedir?
VAL(Value),değer anlamındadır. Ek olarak get edilebilir fakat set edilemez.
VAR(Variable),değişken anlamındadır. Get ve set işlemi yapılabilmektedir.
VAL'da bir değer ataması yapıldıktan sonra kaydedilir ve değiştirilemez. VAR'da ise bir değer atamasından sonra değiştirilebilir.

Bir `var` değişkeni `val` gibi davranmasını nasıl sağlayabiliriz `val` kelimesini kullanmadan? Bunu neden yapmak isteriz? Örnek bir senaryo verin.
 Yukarıda bellirtiğim gibi bir var değişkeni set işleme yapabildiği için setini private yaparım böylece dışarıdan değer ataması alamaz değişkenin değeri ilk neyse onu kaydeder ve değiştirelemez.

Örnek Senaryo;
Gamze adında bir değerimiz olsun ve bunu val haline getirelim val keywordü olmadan 

var name="Gamze"
private set 


"Değişmez" (Immutable) ve "Salt Okunur" (ReadOnly) kavramlarını açıklayın. `val` değişkenler neden aslında "değişmez" değil de "salt okunur" olarak açıklanmalıdır?
val değişkenler genelde Immutable olarak duyarız ama bu yanlış bir ifadedir Çünkü;
immutable demek şu oluyor değeri değiştirelemez anlamına gelmektedir.
readOnly ise ilk değer atamasından sonra tekrar değer atanamaz demektir. Ama farklı zamanlarda farklı sonuçlar üretebilir.Yani değeri okunabilet ama set edilemeyen değişkendir.
Bunu bir örnek açıklayalım;

class Box {
   var width: Int = 20
   var height: Int = 40
   var length: Int = 50
   var usedSpace: Int = 0

   val avaliableSpace: Int
       get() = (width * height * length) - usedSpace
}

Bir box sınıfım var bu sınıfta değişkenlerim bulunuyor(width,height,length,usedSpace). avaliableSpace değişkenine baktığımızda get fonksiyonu güncellenmiş. (width * height * length) - usedSpace diye değişkenlerle bir işlem yapılıyor ve bu değişkenlerin anlık verilen değerleriyle bir hesaplama yapıyor. avaliableSpace değişkenimiz val olmasına rağmen farklı sonuçlar elde edebilir, Bu yüzden val değikene immutable demek yerine readOnly dememiz daha doğru olur.
